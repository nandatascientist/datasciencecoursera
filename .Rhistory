install.packages("whisker")
install.packages("evaluate")
install.packages("evaluate")
library(devtools)
find_rtools()
getwd()
cd C:\R
setwd("c:\R")
setwd("C:/R")
getwd()
source("nthroot.R")
ls
dir()
nthroot(2,25)
vect<-c(1,2,3)
attributes(vect)
length(vect)
vect
vect[1]
vect[3]
vect[4]
class(vect)
vect = c("one","two","three")
vect
class(vect)
vect+1
a<-vect+1
args(vector)
vector("numeric",10)
1/0
0/0
print("watra")
x<-1:30
x
x[25]
length(x)
x<-c(1+0i,0+1i)
x^2
c("a",TRUE)
mat<-matrix(nrow=2,nco1=2)
mat<-matrix(nrow = 2,nco1 = 2)
m<-matrix(nrow = 2,nco1 = 2)
help("matrix")
matrix(nrow=1,ncol=2)
matrix(nrow=2,ncol=2)
mat<-matrix(nrow=2,ncol=2)
mat
attributes(mat)
class(mat)
mymatrix<-matrix(1:10,nrow=5,ncol=2)
mymatrix
attributes(mymatrix)
dim(scalarmat)<-c(10,1)
?rep
rep(0,10)
rowVect<-rep(0,10)
rowVect
dim(mymatrix)<-c(10,1)
mymatrix
dim(mymatrix)<-c(1,10)
mymatrix
mymatrix*rowVect
x <-1:3
y<-2:5
cbind(x,y)
rbind(x,y)
mylist<-list(1:10,c("yes","no"),c(T,F,T,T))
mylist
mylist[1][2]
mylist[[1]][2]
mylist[[3]][2]
classes<-factor(c("triangle","circle","rectangle"))
classes
attributes(classes)
table(classes)
help("table")
unclass("classes")
help("attr")
attr(classes)
attr("classes")
attr(classes,"leves")
attr(classes,"levels")
attr(classes,"length")
attr(rowVect,"length")
levels(classes)
levels(classes)<-c("circle","triangle","rectangle")
levels(classes)
mylist
mylist[[4]]<-c(NA,NA,NaN)
mylist
is.nan(mylist[[4]])
is.na(mylist[[4]])
dim(mylist)
dimensions(mylist)
attributes(mylist)
mylist
attributes(mylist)
mylist[[4]]
class(mylist)
attributes(mylist[[1]])
mydf<-data.frame(foo=1:4,bar=c(T,F,T,F))
mydf
attributes(mydf)
colnames(mydf)
colnames(mydf)<-c("col1","col2")
mydf
names(mydf)
mydf[foo]
mydf["foo"]
mydf["col1"]
mylist
names(mylist)
names(mylist)<-c("num1-10","charyn","logictf","na/n")
mylist
mylist["charyn"]
mylist[charyn]
mylist
list[1]
mylist[1]
class(mylist[1])
class(mylist[1][1])
mylist$num1-10
mylist$"num1-10"
mylist[1:2]
length(mylist)
mymatrix
mymatrix[mymatrix>5]
class(mylist[[1]])
names(mylist)
mylist$charyn
class(mylist[[charyn]])
class(mylist[[$charyn]])
class(mylist$charyn)
class(mylist["charyn"])
class(mylist[["charyn"]])
mylist
mylist[c(1,4)]
names(mylist)
ind<-c("charyn","logictf")
mylist(ind)
mylist[[ind]]
ind<-"charyn"
mylist[[ind]]
help("complete.cases")
help("read.table")
getwd()
dir()
help("dump")
mydf<-read.csv("hw1_data.csv")
attributes(mydf)
dimensions(mydf)
dim(mydf)
names(mydf)
mydf[1:2,]
length(mydf)
dim(mydf)[1]
numrows<-dim(mydf)[1]
numrows
mydf[numrows-2:numrows,]
mydf[numrows,]
mydf[{numrows-2:numrows},]
mydf[152:153,]
mydf[47,]["Ozone"]
mydf[,"Ozone"]
goodozval<-!is.na(mydf[,"Ozone"])
sum(goodozval)
153-116
sum(mydf[,"Ozone"][goodozval])
4887/116
mean(mydf[,"Ozone"][goodozval])
good<-complete.cases(mydf)
mycleandf<-mydf[good]
mycleandf<-mydf[good,]
dim(mycleandf)
names(mycleandf)
mycleandf["Ozone">31]
mycleandf$Ozone
ogt31<-0
ogt31
ogt31<-mycleandf$Ozone>31
ogt31
tmpgt90<-mycleandf$Temp>90
tempgt90
tmpgt90
index<-ogt31 & tmpgt30
index<-ogt31 & tmpgt90
mycleandf[index]
mycleandf[index,]
mean(mycleandf[index,"Solar.R"])
mycleandf["Month"==6,]
mycleandf[mycleandf$Month==6,]
mycleandf[mycleandf$Month==6,"Temp"]
mean(mycleandf[mycleandf$Month==6,"Temp"])
mean(mycleandf[mydf$Month==6,"Temp"])
mean(mydf[mydf$Month==6,"Temp"])
max(mydf[mydf$Month==6,"Temp"])
max(mydf[mydf$Month==5,"Ozone"])
max(mycleandf[mycleandf$Month==5,"Ozone"])
for (i in 1:10){print(i)}
x<-c("om","durgayei","namaha")
length(x)
for (i in 1:length(x)){print(x[i])}
for (i in 1:seq_along(x)){print(x[i])}
for (i in seq_along(x)){print(x[i])}
seq_along(x)
help seq_len
help("seq_len")
seq_len(nrow(x))
add2 <- function(a,b){
a+b
}
add2(3,4)
above10 <- function(vect){
vect[vect>10]
}
above10(1:10)
test<-1:10
test[1]
above10(1:20)
above<- function(vect,threshold){
vect[vect>threshold]
}
above(1:30,27)
above<- function(vect,threshold=10){
vect[vect>threshold]
}
above<- function(vect,threshold=10){
vect[vect>threshold]
}
above(1:30)
dim(mydf)[2]
class(dim(mydf)[2])
rep(0,10)
olmean <- function(df){
numcols<-dim(df)[2]
colmeans<-rep(0,numcols)
for i in (1:numcols){
colmeans[i] = mean(df[,i])
}
}
colmean <- function(df){
numcols<-dim(df)[2]
colmeans<-rep(0,numcols)
for (i in 1:numcols){
colmeans[i] = mean(df[,i])
}
}
colmean(mycleandf)
a<-colmean(mycleandf)
a
colmean <- function(df){
numcols<-dim(df)[2]
colmeans<-rep(0,numcols)
for (i in 1:numcols){
colmeans[i] = mean(df[,i])
}
}
colmean <- function(df){
numcols<-dim(df)[2]
colmeans<-rep(0,numcols)
for (i in 1:numcols){
colmeans[i] = mean(df[,i])
}
return colmeans
}
colmean <- function(df){
numcols<-ncol(df)
colmeans<-rep(0,numcols)
i=1
for (i in 1:numcols){
colmeans[i] = mean(df[,i])
}
}
colmeans(mycleandf)
colmean(mycleandf)
colmean(mycleandf)
mycleandf
a<-colmeans(mycleandf)
a<-colmean(mycleandf)
a
colmean <- function(df){
numcols<-ncol(df)
colmeans<-numeric(numcols)
for (i in 1:numcols){
colmeans[i] = mean(df[,i])
}
colmeans
}
colmean <- function(df){
numcols<-ncol(df)
colmeans<-numeric(numcols)
for (i in 1:numcols){
colmeans[i] = mean(df[,i])
}
colmeans
}
colmean(mydf)
colmean(mycleandf)
colmean <- function(df, removeNA=TRUE){
numcols<-ncol(df)
colmeans<-numeric(numcols)
for (i in 1:numcols){
colmeans[i] = mean(df[,i],na.rm=removeNA)
}
colmeans
}
colmean(mydf)
search()
make.power<-function(n){
power<-function(x){
x^n
}
power
}
cube<-make.power(3)
cube(2)
cube(3)
square<-make.power(2)
square(10)
ls(environment(cube))
get("n",environment(cube))
n<-sys.time()
n<-Sys.time()
n
class(n)
p<-as.POSIXlt(n)
p
unclass(p)
n$sec
p$sec
cubet<-function(x,n){
x^3
}
cubet(3)
test<-1:10
if(test>5){test<-0}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
a<-c(1,4,5,6,7,8,332,223,100)
length(a)
getwd()
dir()
setwd("specdata")
dir()
mydf<-read.csv("001.csv")
mydf
attributes(mydf)
names(mydf)
help("read.csv")
dim(mydf)
mydf<-merge(mydf,read.csv("002.csv"))
dim(mydf)
names(read.csv("002.csv"))
dim(read.csv("002.csv"))
mydf<-read.csv("001.csv")
mydf<-rbind(mydf,read.csv("002.csv"))
dim(mydf)
head(mydf)
tail(mydf)
setwd("C:\R")
setwd("C:/R")
filePath<-"specdata"
help("paste")
paste("test","1234","wass", sep="")
getFileName<- function(num){
if(num<10){
# single digit name
filename<-paste("0","0",num,".csv")
}else if (num>11 && num <100){
# double  digit name
filename<-paste("0",num,".csv")
}else {
# triple  digit name
filename<-paste(num,".csv")
}
filename
}
getFileName(1)
getFileName<- function(num){
if(num<10){
# single digit name
filename<-paste("0","0",num,".csv", sep="")
}else if (num>11 && num <100){
# double  digit name
filename<-paste("0",num,".csv", sep="")
}else {
# triple  digit name
filename<-paste(num,".csv", sep="")
}
filename
}
getFileName(22)
getFileName(1)
getFileName(333)
getFileName<- function(num){
if(num<10){
# single digit name
filename<-paste("/","0","0",num,".csv", sep="")
}else if (num>11 && num <100){
# double  digit name
filename<-paste("/","0",num,".csv", sep="")
}else {
# triple  digit name
filename<-paste("/",num,".csv", sep="")
}
filename
}
getFileName<- function(num){
if(num<10){
# single digit name
filename<-paste("/","0","0",num,".csv", sep="")
}else if (num>11 && num <100){
# double  digit name
filename<-paste("/","0",num,".csv", sep="")
}else {
# triple  digit name
filename<-paste("/",num,".csv", sep="")
}
filename
}
getFileName(33)
testdf<-read.csv(paste(filePath,getFileName(1)))
testdf<-read.csv(paste(filePath,getFileName(1),sep=""))
dim(testdf)
id<-1:10
id[10]
id<-c(2,5,6)
id
id[3]
?mean
source("pollutantmean.R")
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata","sulfate",1)
source("pollutantmean.R")
pollutantmean("specdata","sulfate",1)
View(testdf)
parm<-"sulfate"
mean(testdf[,testdf$parm],na.rm=TRUE)
View(mycleandf)
mean(testdf[,2],na.rm=TRUE)
head(testdf$parm)
head(testdf[,testdf$parm])
head(testdf[,$parm])
head(testdf[,parm])
testdf[,parm]
source("pollutantmean.R")
pollutantmean("specdata","sulfate",1)
pollutantmean("specdata","sulfate",1:2)
source("submitscript1.R")
submit()
source("pollutantmean.R")
submit()
submit()
submit()
submit()
getwd()
filePath
help("list.files")
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
submit()
submit()
submit()
help("cor")
complete("specdata")
test<-complete("specdata")
ind<-test[,nobs>500]
names(test)
ind<-test[,nobs]>500
test[,nobs]
test[,$nobs>500]
test[,"nobs"]>500
cor(c(1,2,3,4,5),c(2,3,6,8,10))
source("corr.R")
cr<-corr("specdata",150)
source("corr.R")
cr<-corr("specdata",150)
source("corr.R")
cr<-corr("specdata",150)
source("corr.R")
cr<-corr("specdata",150)
source("corr.R")
cr<-corr("specdata",150)
head(cr)
class(cr)
summary(cr)
submit()
submit()
submit()
quit()
